import pandas as pd
import yfinance as yf   
import datetime as dt

if 'data_loader' not in globals():
    from mage_ai.data_preparation.decorators import data_loader
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


@data_loader
def load_data(*args, **kwargs):
    """
    Template code for loading data from any source.

    Returns:
        Anything (e.g. data frame, dictionary, array, int, str, etc.)
    """
    symbol = ["TCS.NS"]
    data = pd.DataFrame()

    # Need to devlop further to handle incremental data loading
    # and overwrite the existing data
    def fetch_stock_earnings(symbol):
        ticker = yf.Ticker(symbol)
        try:
            data = ticker.earnings_dates
            data['Symbol'] = symbol
            data.reset_index(inplace=True)
            return data
        except Exception as e:
            print(f"Error fetching data for {symbol}: {e}")
    
    for sym in symbol:
        daily_data = fetch_stock_earnings(sym)
        if daily_data is not None:
            data = pd.concat([data, daily_data], ignore_index=True)

    return data


@test
def test_output(output, *args) -> None:
    """
    Template code for testing the output of the block.
    """
    assert output is not None, 'The output is undefined'
